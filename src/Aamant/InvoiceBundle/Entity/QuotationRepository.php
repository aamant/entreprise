<?php

namespace Aamant\InvoiceBundle\Entity;

use Aamant\UserBundle\Entity\Company;
use Doctrine\ORM\EntityRepository;

/**
 * QuotationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuotationRepository extends EntityRepository
{
    public function findForList(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT q, c, i FROM AamantInvoiceBundle:Quotation q
                JOIN q.customer c
                LEFT JOIN q.invoices i
                WHERE q.company = :company
            ')->setParameter('company', $company);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findWaitInvoice(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery("
                SELECT q, c, i FROM AamantInvoiceBundle:Quotation q
                JOIN q.customer c
                LEFT JOIN q.invoices i
                WHERE q.company = :company
                AND q.status IN ('wait', 'partial_invoiced')
            ")->setParameter('company', $company);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getWaitToInvoice(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery("
                SELECT (SUM(q.total) - SUM(i.total)) as total FROM AamantInvoiceBundle:Quotation q
                LEFT JOIN q.invoices i
                WHERE q.company = :company
                AND q.status IN ('wait', 'partial_invoiced')
            ")->setParameter('company', $company);

        try {
            return $query->getSingleScalarResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    /**
     * @param Company $company
     * @return int
     */
    public function getMaxNumber(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT MAX(q.number) AS number FROM AamantInvoiceBundle:Quotation q
                WHERE q.company = :company
            ')->setParameter('company', $company);

        try {
            list($before, $increment) = explode('-', $query->getSingleScalarResult());
            return $increment;
        } catch (\Doctrine\ORM\NoResultException $e) {
            return 0;
        }
    }

    public function findWithCustomerById($id)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT q, c FROM AamantInvoiceBundle:Quotation q
                JOIN q.customer c
                WHERE q.id = :id'
            )->setParameter('id', $id);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
