<?php

namespace Aamant\InvoiceBundle\Entity;

use Aamant\UserBundle\Entity\Company;
use Doctrine\ORM\EntityRepository;

/**
 * InvoiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoiceRepository extends EntityRepository
{
    /**
     * @param Company $company
     * @return array|null
     */
    public function findForList(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT i, c, q, p FROM AamantInvoiceBundle:Invoice i
                JOIN i.customer c
                LEFT JOIN i.quotation q
                LEFT JOIN i.payments p
                WHERE i.company = :company
            ')->setParameter('company', $company);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    /**
     * @param Company $company
     * @return array|null
     */
    public function findWaitPaid(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery("
                SELECT i, c, p FROM AamantInvoiceBundle:Invoice i
                JOIN i.customer c
                LEFT JOIN i.payments p
                WHERE i.company = :company
                AND i.status IN ('wait', 'partial')
            ")->setParameter('company', $company);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getWaitToPaid(Company $company)
    {
        $query = $this->getEntityManager()
            ->createQuery("
                SELECT (SUM(i.total) - SUM(p.total)) as total FROM AamantInvoiceBundle:Invoice i
                LEFT JOIN i.payments p
                WHERE i.company = :company
                AND i.status IN ('wait', 'partial')
            ")->setParameter('company', $company);

        try {
            return $query->getSingleScalarResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    /**
     * @param $id
     * @return mixed|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findFullById($id)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT p, c FROM AamantInvoiceBundle:Invoice p
                LEFT JOIN p.items c
                WHERE p.id = :id'
            )->setParameter('id', $id);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findFullWithUserById($id)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT p, c FROM AamantInvoiceBundle:Invoice p
                LEFT JOIN p.items c
                JOIN p.customer cu
                WHERE p.id = :id'
            )->setParameter('id', $id);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
